2025-09-08 14:07:00,067 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:07:00,068 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:07:00,202 [INFO] Finished function 'pdf_reader' in 0.1336 seconds
2025-09-08 14:07:00,202 [INFO] Finished function 'local_data_loading' in 0.1347 seconds
2025-09-08 14:07:39,238 [INFO] Started function 'load_local_data_folder' with args=('./Data',), kwargs={}
2025-09-08 14:07:39,238 [INFO] Started function 'local_data_loading' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:07:39,239 [INFO] Started function 'pdf_reader' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:07:39,655 [INFO] Finished function 'pdf_reader' in 0.4160 seconds
2025-09-08 14:07:39,655 [INFO] Finished function 'local_data_loading' in 0.4170 seconds
2025-09-08 14:07:39,655 [INFO] Started function 'local_data_loading' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:07:39,655 [INFO] Started function 'pdf_reader' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:07:39,846 [INFO] Finished function 'pdf_reader' in 0.1911 seconds
2025-09-08 14:07:39,846 [INFO] Finished function 'local_data_loading' in 0.1911 seconds
2025-09-08 14:07:39,846 [INFO] Started function 'local_data_loading' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:07:39,847 [INFO] Started function 'pdf_reader' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:07:40,173 [INFO] Finished function 'pdf_reader' in 0.3261 seconds
2025-09-08 14:07:40,173 [INFO] Finished function 'local_data_loading' in 0.3272 seconds
2025-09-08 14:07:40,173 [INFO] Finished function 'load_local_data_folder' in 0.9353 seconds
2025-09-08 14:07:52,594 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:07:52,594 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:07:52,741 [INFO] Finished function 'pdf_reader' in 0.1467 seconds
2025-09-08 14:07:52,741 [INFO] Finished function 'local_data_loading' in 0.1467 seconds
2025-09-08 14:32:41,863 [INFO] Started function 'local_data_loading' with args=('./Data/langchainds.pdf',), kwargs={}
2025-09-08 14:32:41,864 [INFO] Started function 'pdf_reader' with args=('./Data/langchainds.pdf',), kwargs={}
2025-09-08 14:32:41,864 [ERROR] Error in function 'pdf_reader' after 0.0010 seconds: [Errno 2] No such file or directory: './Data/langchainds.pdf'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 13, in pdf_reader
    with open(file_path, 'rb') as file:
FileNotFoundError: [Errno 2] No such file or directory: './Data/langchainds.pdf'
2025-09-08 14:32:41,869 [ERROR] Error in function 'local_data_loading' after 0.0060 seconds: [Errno 2] No such file or directory: './Data/langchainds.pdf'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 53, in local_data_loading
    return load_file_loading.pdf_reader(file_path)
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 13, in pdf_reader
    with open(file_path, 'rb') as file:
FileNotFoundError: [Errno 2] No such file or directory: './Data/langchainds.pdf'
2025-09-08 14:32:58,179 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:32:58,179 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:32:58,321 [INFO] Finished function 'pdf_reader' in 0.1411 seconds
2025-09-08 14:32:58,321 [INFO] Finished function 'local_data_loading' in 0.1411 seconds
2025-09-08 14:35:21,391 [INFO] Started function 'local_data_loading' with args=('./Data/lafngchain.pdf',), kwargs={}
2025-09-08 14:35:21,391 [INFO] Started function 'pdf_reader' with args=('./Data/lafngchain.pdf',), kwargs={}
2025-09-08 14:35:21,392 [ERROR] Error in function 'pdf_reader' after 0.0010 seconds: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 13, in pdf_reader
    with open(file_path, 'rb') as file:
FileNotFoundError: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
2025-09-08 14:35:21,393 [ERROR] Error in function 'local_data_loading' after 0.0020 seconds: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 53, in local_data_loading
    return load_file_loading.pdf_reader(file_path)
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 13, in pdf_reader
    with open(file_path, 'rb') as file:
FileNotFoundError: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
2025-09-08 14:36:02,518 [INFO] Started function 'local_data_loading' with args=('./Data/lafngchain.pdf',), kwargs={}
2025-09-08 14:36:02,519 [INFO] Started function 'pdf_reader' with args=('./Data/lafngchain.pdf',), kwargs={}
2025-09-08 14:36:02,519 [ERROR] Error in function 'pdf_reader' after 0.0000 seconds: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
  File "i:\IP-taskpipline\project-genai\pgen\src\core\data_loading.py", line 13, in pdf_reader
    with open(file_path, 'rb') as file:
FileNotFoundError: [Errno 2] No such file or directory: './Data/lafngchain.pdf'
2025-09-08 14:36:02,520 [INFO] Finished function 'local_data_loading' in 0.0024 seconds
2025-09-08 14:36:08,671 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:36:08,671 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:36:08,809 [INFO] Finished function 'pdf_reader' in 0.1384 seconds
2025-09-08 14:36:08,810 [INFO] Finished function 'local_data_loading' in 0.1394 seconds
2025-09-08 14:44:37,701 [INFO] Started function 'sentence_transformer' with args=(), kwargs={}
2025-09-08 14:44:37,701 [ERROR] Error in function 'sentence_transformer' after 0.0000 seconds: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
2025-09-08 14:45:28,587 [INFO] Started function 'recursive_text_splitter' with args=('See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/372529063\nAn Effective Query System Using LLMs and LangChain\nArticle \xa0\xa0 in\xa0\xa0International Journal of Engineering R esearch and  · July 2023\nCITATIONS\n11READS\n3,834\n2 author s:\nAdith Sr eeram a\nVIT-AP Univ ersity\n2 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nJithendr a Sai P appuri\nGeor ge Mason Univ ersity\n3 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Jithendr a Sai P appuri  on 23 July 2023.\nThe user has r equest ed enhanc ement of the do wnlo aded file.An Ef fective Query System Using LLMs and \nLangChain  \n \nAdith Sreeram A S  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  Pappuri Jithe ndra Sai  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  \n \n \nAbstract—Due to the unstructured nature of the PDF \ndocument format and the requirement for precise and pertinent \nsearch results, querying a PDF can take time and effort. \nLang Chain  overcomes these challenges by utilizing advanced \nnatural language processing algorith ms that analyze the content \nof the PDFs and extract essential information. To improve the \nsearch experience, it uses  effective indexing and retrieval \ntechniques, mov able filters, and a simple search interface.  \nLangChain also allows users to save queries, create bookmarks, \nand annotate important sections, enabling efficient retrieval of \nrelevant information from PDF documents. The features of \nLangChain increase overal l efficiency and makes PDF querying \nmuch easier and  simpler .  \nKeywords —LangChain , Querying PD F, Streamlit.  \nI.  INTRODUCTION   \nThe growth and use of digital products is growing \nexponentially in this world. And the process of searching and \nretrieving information  from  those pdf documents is \nchallenging. Now, we have a t ool that revolutionized Natural \nLanguage Processing and is designed to create applications \nbased on Large Language Models [LLM].  \n \nLangChain is a cutting -edge solutio n which helps us in the \nquerying proce ss and extracting information from PDFs. With \nits advanced NLP algorithms,  it helps users to interact with the \nPDFs and makes the document search and retrieval very easy.  \n \nAfter building our LLM model we will use Streamlit, a web \napplication framewor k whi ch helps us create custom attractive \nweb applications. One advantage of Streamlit is that its use \ndoes not necessitate familiarity with other web development \nframeworks like  HTML and CSS. With Streamlit, you can \ninstantly deploy your models with minim al effort and code.  \nII. METHODOLOGY  \nLanChain helps us with  the querying process a nd extracting  \ninformation fro m the PDF base d on the prompt sent by the \nuser.For the sake of conv enience, a web application is \ndeveloped that can retrieve accurate information base d on the \nuser’s input alo ne. \n \n \nFig.A. Application  Architechture  \n \nA. Steps followed in the Application Architechture : \nStep I: The  Open AI  Large Language Model s and The Open A I \nEmbeddings a cts as the back -end of our application . \nStep II:  Here we will use Strea mlit, which will he lp us to build \ninteractive and beautiful interface for  our we b application.  \nStep III: Streamlit will also take care of our Front -end part \nwhere we can get the text inputs and messages and also the \nPDF files from the user . \n \nFig.B. Workin g Pro cess \n \nWith the help of Fig. B we can understand how L arge Language \nModel helps the user to get the accurate results.  \nB. Streaml it \nStreamlit is an open -source library that allows us to unique \nweb apps for Machine Learning and Data Science projects fast \nand efficient . Streamlit is an open -source library that allows us \nto unique web apps for Machine Learning and Data Science \nprojects fast and efficient. With this framework, you can easily \nbuild interactive visualization plo ts, models, and dashboards \nwithout h aving  a worry about the underlying web framework \nor deployment infrastructure used in the backend. It also \nprovides the users to add widgets which helps the users the \ninteract with the web app and the models that we used . This \nframework also integrates the  popu lar python and machine \nlearning packages such as NumPy, Pandas, Matplotlib, \n367International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023Seaborn, Scikit -learn and TensorFlow, which enables us to \nquickly build and deploy our trained models . \nFeatures  of Streamlit:  \nUser -friendly:  Streamlit offers an easy -to-use in terface that \nrequires little scripting to build dynamic data apps.  \nRapid prototyping:  Streamlit is made for rapid prototyping, \nallowing developers and data scientists to test out various \nconcepts and create completely funct ional apps.  \nData Cache:  The dat a cac he facilitates and accelerates \ncomputati onal workflows.   \n \nReal-time collaboration is made possible by Streamlit, \nallowing several users to work on the same projec t at once.  \nWidgets that enable for real -time data editing and exploration \ninclude slide rs, d ropdown menus, and checkboxes, among a \nvast variety of interactive widgets that Streamlit offers.  \n \nIII.  RESULTS  AND  DISCUSSION  \nA. Images of Web Application and Output.  \n \nFig.C. Interface of web applicat ion \n \nThis is how the i nterface of our web application w ill look li ke. \nNow the use r can click on br owse file s and can upload a fi le \nfrom their devi ce under 200  Mega  Bytes . After few minutes of \nprocessing , we will get an additional in box where we can give \nin ou r quer y. \n \n \nFig.D. Image of web applicatio n with i nput q uery box.  \n \nSo, now we got our input query box and now we can ask \nquestions on the PDF t hat we have uploaded. Here I have \nuploaded a PDF based on Cyber Crime.  Now you can ask \ndiffer ent question s like “What is Cyber Stalking?”, “What are \nthe recent inci dents  of Cyber Terrorism in Wo rld?” and also  \ndifferentiate between questions.  \n \n \nFig.E. The Output that we got for our 1st Query  \n \n \nFig.F. The Output that we got for our 2nd  Query  \n \nHere we got our output  for our 1st and 2nd query w hich is \n“What is Cyber Stalking?” and “What are the recent incidents \nof Cyber Terrorism in Wo rld?” our Large Language Model \nwent through  file and gave an accurate result on the query \ngiven.  \n \n \nFig.G. The ou tput we got for Differentiate Between Question  \n \nThis output that the appli catio n gave us after the query is quite \ninteresting . When we look into the file there were 3 pages \ndiscussing on Vishing and Phising  but th e application gave us \na clear and con cise diffe rentiation on both Vishing and \nPhishing in just 4 line.  \n \n368International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023IV. CONCLUSION  \nUsing LangChain and Large Language Model  and Streamlit  \nwe have created a web application  that simplifies and \nenhances the process of extracting relevant informat ion from \nPDFs . Users can now retrieve any infor mation in the PDF and \nsave their time and eff ort. The i ntegration of LangChai n \ntechnology adds a layer of efficiency and accuracy to the \nquerying process, making the app a valuable tool for \nindividuals working with PDF documents.  \n \n \n \n \n \n \n \n REFERENCES  \n \n[1] https://streamlit.io/  \n[2] https ://python.langchain.com/  \n[3] https://platform.openai.com/docs/models  \n[4] Meharwade, Anuradha & Patil, G.A.. (2016). E fficient Keyword Search \nover Encrypted Cloud Data. Procedia Computer Science. 78. 139 -145. \n10.1016 /j.procs.2016.02.023. Trans. Roy. Soc. London, vol. A247, pp. \n529-551, April 1955. ( references ) \n[5] Nashipudimath, Madhu & Shinde, Subhash & Jain, Jayshree. (2020). An \nefficient integration and indexing method based on feature patterns and \nsemantic analys is fo r big data. Array. 7. 100033. \n10.1016/j.array.2020.100033. I.S. Jacobs and C.P. Bean, “Fine particles, \nthin films and exchange anisotropy, ” in Magnetism, vol. III, G.T. Rado \nand H. Suhl, Eds. New York: Academic, 1963, pp. 271 -350. \n[6] Zhu, Miao & Cole, Ja cquel ine. (2022). PDFDataExtractor: A Tool for \nReading Scientific Text and Interpreting Metadata from the Typeset \nLiterature in the Portable Document For mat. Journal of Chemical \nInformation and Modeling. 62. 10.1021/acs.jcim.1c01198. R. Nicole, \n“Title of p aper with only first word capitalized, ” J. Name Stand. \nAbbrev., in press.  \n \n369International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023\nView publication stats',), kwargs={}
2025-09-08 14:45:28,587 [ERROR] Error in function 'recursive_text_splitter' after 0.0000 seconds: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
2025-09-08 14:46:01,853 [INFO] Started function 'load_local_data_folder' with args=('./Data',), kwargs={}
2025-09-08 14:46:01,853 [INFO] Started function 'local_data_loading' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:46:01,853 [INFO] Started function 'pdf_reader' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:46:02,458 [INFO] Finished function 'pdf_reader' in 0.6052 seconds
2025-09-08 14:46:02,458 [INFO] Finished function 'local_data_loading' in 0.6052 seconds
2025-09-08 14:46:02,458 [INFO] Started function 'local_data_loading' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:46:02,458 [INFO] Started function 'pdf_reader' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:46:02,637 [INFO] Finished function 'pdf_reader' in 0.1798 seconds
2025-09-08 14:46:02,637 [INFO] Finished function 'local_data_loading' in 0.1798 seconds
2025-09-08 14:46:02,638 [INFO] Started function 'local_data_loading' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:46:02,638 [INFO] Started function 'pdf_reader' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:46:02,759 [INFO] Finished function 'pdf_reader' in 0.1205 seconds
2025-09-08 14:46:02,759 [INFO] Finished function 'local_data_loading' in 0.1205 seconds
2025-09-08 14:46:02,759 [INFO] Finished function 'load_local_data_folder' in 0.9065 seconds
2025-09-08 14:46:02,780 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:46:02,781 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:46:02,923 [INFO] Finished function 'pdf_reader' in 0.1426 seconds
2025-09-08 14:46:02,923 [INFO] Finished function 'local_data_loading' in 0.1436 seconds
2025-09-08 14:46:02,935 [INFO] Started function 'recursive_text_splitter' with args=('See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/372529063\nAn Effective Query System Using LLMs and LangChain\nArticle \xa0\xa0 in\xa0\xa0International Journal of Engineering R esearch and  · July 2023\nCITATIONS\n11READS\n3,834\n2 author s:\nAdith Sr eeram a\nVIT-AP Univ ersity\n2 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nJithendr a Sai P appuri\nGeor ge Mason Univ ersity\n3 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Jithendr a Sai P appuri  on 23 July 2023.\nThe user has r equest ed enhanc ement of the do wnlo aded file.An Ef fective Query System Using LLMs and \nLangChain  \n \nAdith Sreeram A S  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  Pappuri Jithe ndra Sai  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  \n \n \nAbstract—Due to the unstructured nature of the PDF \ndocument format and the requirement for precise and pertinent \nsearch results, querying a PDF can take time and effort. \nLang Chain  overcomes these challenges by utilizing advanced \nnatural language processing algorith ms that analyze the content \nof the PDFs and extract essential information. To improve the \nsearch experience, it uses  effective indexing and retrieval \ntechniques, mov able filters, and a simple search interface.  \nLangChain also allows users to save queries, create bookmarks, \nand annotate important sections, enabling efficient retrieval of \nrelevant information from PDF documents. The features of \nLangChain increase overal l efficiency and makes PDF querying \nmuch easier and  simpler .  \nKeywords —LangChain , Querying PD F, Streamlit.  \nI.  INTRODUCTION   \nThe growth and use of digital products is growing \nexponentially in this world. And the process of searching and \nretrieving information  from  those pdf documents is \nchallenging. Now, we have a t ool that revolutionized Natural \nLanguage Processing and is designed to create applications \nbased on Large Language Models [LLM].  \n \nLangChain is a cutting -edge solutio n which helps us in the \nquerying proce ss and extracting information from PDFs. With \nits advanced NLP algorithms,  it helps users to interact with the \nPDFs and makes the document search and retrieval very easy.  \n \nAfter building our LLM model we will use Streamlit, a web \napplication framewor k whi ch helps us create custom attractive \nweb applications. One advantage of Streamlit is that its use \ndoes not necessitate familiarity with other web development \nframeworks like  HTML and CSS. With Streamlit, you can \ninstantly deploy your models with minim al effort and code.  \nII. METHODOLOGY  \nLanChain helps us with  the querying process a nd extracting  \ninformation fro m the PDF base d on the prompt sent by the \nuser.For the sake of conv enience, a web application is \ndeveloped that can retrieve accurate information base d on the \nuser’s input alo ne. \n \n \nFig.A. Application  Architechture  \n \nA. Steps followed in the Application Architechture : \nStep I: The  Open AI  Large Language Model s and The Open A I \nEmbeddings a cts as the back -end of our application . \nStep II:  Here we will use Strea mlit, which will he lp us to build \ninteractive and beautiful interface for  our we b application.  \nStep III: Streamlit will also take care of our Front -end part \nwhere we can get the text inputs and messages and also the \nPDF files from the user . \n \nFig.B. Workin g Pro cess \n \nWith the help of Fig. B we can understand how L arge Language \nModel helps the user to get the accurate results.  \nB. Streaml it \nStreamlit is an open -source library that allows us to unique \nweb apps for Machine Learning and Data Science projects fast \nand efficient . Streamlit is an open -source library that allows us \nto unique web apps for Machine Learning and Data Science \nprojects fast and efficient. With this framework, you can easily \nbuild interactive visualization plo ts, models, and dashboards \nwithout h aving  a worry about the underlying web framework \nor deployment infrastructure used in the backend. It also \nprovides the users to add widgets which helps the users the \ninteract with the web app and the models that we used . This \nframework also integrates the  popu lar python and machine \nlearning packages such as NumPy, Pandas, Matplotlib, \n367International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023Seaborn, Scikit -learn and TensorFlow, which enables us to \nquickly build and deploy our trained models . \nFeatures  of Streamlit:  \nUser -friendly:  Streamlit offers an easy -to-use in terface that \nrequires little scripting to build dynamic data apps.  \nRapid prototyping:  Streamlit is made for rapid prototyping, \nallowing developers and data scientists to test out various \nconcepts and create completely funct ional apps.  \nData Cache:  The dat a cac he facilitates and accelerates \ncomputati onal workflows.   \n \nReal-time collaboration is made possible by Streamlit, \nallowing several users to work on the same projec t at once.  \nWidgets that enable for real -time data editing and exploration \ninclude slide rs, d ropdown menus, and checkboxes, among a \nvast variety of interactive widgets that Streamlit offers.  \n \nIII.  RESULTS  AND  DISCUSSION  \nA. Images of Web Application and Output.  \n \nFig.C. Interface of web applicat ion \n \nThis is how the i nterface of our web application w ill look li ke. \nNow the use r can click on br owse file s and can upload a fi le \nfrom their devi ce under 200  Mega  Bytes . After few minutes of \nprocessing , we will get an additional in box where we can give \nin ou r quer y. \n \n \nFig.D. Image of web applicatio n with i nput q uery box.  \n \nSo, now we got our input query box and now we can ask \nquestions on the PDF t hat we have uploaded. Here I have \nuploaded a PDF based on Cyber Crime.  Now you can ask \ndiffer ent question s like “What is Cyber Stalking?”, “What are \nthe recent inci dents  of Cyber Terrorism in Wo rld?” and also  \ndifferentiate between questions.  \n \n \nFig.E. The Output that we got for our 1st Query  \n \n \nFig.F. The Output that we got for our 2nd  Query  \n \nHere we got our output  for our 1st and 2nd query w hich is \n“What is Cyber Stalking?” and “What are the recent incidents \nof Cyber Terrorism in Wo rld?” our Large Language Model \nwent through  file and gave an accurate result on the query \ngiven.  \n \n \nFig.G. The ou tput we got for Differentiate Between Question  \n \nThis output that the appli catio n gave us after the query is quite \ninteresting . When we look into the file there were 3 pages \ndiscussing on Vishing and Phising  but th e application gave us \na clear and con cise diffe rentiation on both Vishing and \nPhishing in just 4 line.  \n \n368International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023IV. CONCLUSION  \nUsing LangChain and Large Language Model  and Streamlit  \nwe have created a web application  that simplifies and \nenhances the process of extracting relevant informat ion from \nPDFs . Users can now retrieve any infor mation in the PDF and \nsave their time and eff ort. The i ntegration of LangChai n \ntechnology adds a layer of efficiency and accuracy to the \nquerying process, making the app a valuable tool for \nindividuals working with PDF documents.  \n \n \n \n \n \n \n \n REFERENCES  \n \n[1] https://streamlit.io/  \n[2] https ://python.langchain.com/  \n[3] https://platform.openai.com/docs/models  \n[4] Meharwade, Anuradha & Patil, G.A.. (2016). E fficient Keyword Search \nover Encrypted Cloud Data. Procedia Computer Science. 78. 139 -145. \n10.1016 /j.procs.2016.02.023. Trans. Roy. Soc. London, vol. A247, pp. \n529-551, April 1955. ( references ) \n[5] Nashipudimath, Madhu & Shinde, Subhash & Jain, Jayshree. (2020). An \nefficient integration and indexing method based on feature patterns and \nsemantic analys is fo r big data. Array. 7. 100033. \n10.1016/j.array.2020.100033. I.S. Jacobs and C.P. Bean, “Fine particles, \nthin films and exchange anisotropy, ” in Magnetism, vol. III, G.T. Rado \nand H. Suhl, Eds. New York: Academic, 1963, pp. 271 -350. \n[6] Zhu, Miao & Cole, Ja cquel ine. (2022). PDFDataExtractor: A Tool for \nReading Scientific Text and Interpreting Metadata from the Typeset \nLiterature in the Portable Document For mat. Journal of Chemical \nInformation and Modeling. 62. 10.1021/acs.jcim.1c01198. R. Nicole, \n“Title of p aper with only first word capitalized, ” J. Name Stand. \nAbbrev., in press.  \n \n369International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023\nView publication stats',), kwargs={}
2025-09-08 14:46:02,936 [ERROR] Error in function 'recursive_text_splitter' after 0.0008 seconds: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
2025-09-08 14:46:02,951 [INFO] Started function 'sentence_transformer' with args=(), kwargs={}
2025-09-08 14:46:02,951 [ERROR] Error in function 'sentence_transformer' after 0.0000 seconds: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
2025-09-08 14:47:11,179 [INFO] Started function 'load_local_data_folder' with args=('./Data',), kwargs={}
2025-09-08 14:47:11,179 [INFO] Started function 'local_data_loading' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:47:11,180 [INFO] Started function 'pdf_reader' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:47:11,606 [INFO] Finished function 'pdf_reader' in 0.4263 seconds
2025-09-08 14:47:11,606 [INFO] Finished function 'local_data_loading' in 0.4273 seconds
2025-09-08 14:47:11,606 [INFO] Started function 'local_data_loading' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:47:11,607 [INFO] Started function 'pdf_reader' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:47:11,792 [INFO] Finished function 'pdf_reader' in 0.1855 seconds
2025-09-08 14:47:11,792 [INFO] Finished function 'local_data_loading' in 0.1865 seconds
2025-09-08 14:47:11,793 [INFO] Started function 'local_data_loading' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:47:11,793 [INFO] Started function 'pdf_reader' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:47:12,117 [INFO] Finished function 'pdf_reader' in 0.3232 seconds
2025-09-08 14:47:12,117 [INFO] Finished function 'local_data_loading' in 0.3232 seconds
2025-09-08 14:47:12,117 [INFO] Finished function 'load_local_data_folder' in 0.9380 seconds
2025-09-08 14:47:12,170 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:47:12,170 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:47:12,289 [INFO] Finished function 'pdf_reader' in 0.1189 seconds
2025-09-08 14:47:12,289 [INFO] Finished function 'local_data_loading' in 0.1189 seconds
2025-09-08 14:47:16,403 [INFO] Started function 'sentence_transformer' with args=(), kwargs={}
2025-09-08 14:47:16,404 [ERROR] Error in function 'sentence_transformer' after 0.0015 seconds: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: embed_model.sentence_transformer() missing 1 required positional argument: 'model_name'
2025-09-08 14:48:00,723 [INFO] Started function 'recursive_text_splitter' with args=('See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/372529063\nAn Effective Query System Using LLMs and LangChain\nArticle \xa0\xa0 in\xa0\xa0International Journal of Engineering R esearch and  · July 2023\nCITATIONS\n11READS\n3,834\n2 author s:\nAdith Sr eeram a\nVIT-AP Univ ersity\n2 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nJithendr a Sai P appuri\nGeor ge Mason Univ ersity\n3 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Jithendr a Sai P appuri  on 23 July 2023.\nThe user has r equest ed enhanc ement of the do wnlo aded file.An Ef fective Query System Using LLMs and \nLangChain  \n \nAdith Sreeram A S  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  Pappuri Jithe ndra Sai  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  \n \n \nAbstract—Due to the unstructured nature of the PDF \ndocument format and the requirement for precise and pertinent \nsearch results, querying a PDF can take time and effort. \nLang Chain  overcomes these challenges by utilizing advanced \nnatural language processing algorith ms that analyze the content \nof the PDFs and extract essential information. To improve the \nsearch experience, it uses  effective indexing and retrieval \ntechniques, mov able filters, and a simple search interface.  \nLangChain also allows users to save queries, create bookmarks, \nand annotate important sections, enabling efficient retrieval of \nrelevant information from PDF documents. The features of \nLangChain increase overal l efficiency and makes PDF querying \nmuch easier and  simpler .  \nKeywords —LangChain , Querying PD F, Streamlit.  \nI.  INTRODUCTION   \nThe growth and use of digital products is growing \nexponentially in this world. And the process of searching and \nretrieving information  from  those pdf documents is \nchallenging. Now, we have a t ool that revolutionized Natural \nLanguage Processing and is designed to create applications \nbased on Large Language Models [LLM].  \n \nLangChain is a cutting -edge solutio n which helps us in the \nquerying proce ss and extracting information from PDFs. With \nits advanced NLP algorithms,  it helps users to interact with the \nPDFs and makes the document search and retrieval very easy.  \n \nAfter building our LLM model we will use Streamlit, a web \napplication framewor k whi ch helps us create custom attractive \nweb applications. One advantage of Streamlit is that its use \ndoes not necessitate familiarity with other web development \nframeworks like  HTML and CSS. With Streamlit, you can \ninstantly deploy your models with minim al effort and code.  \nII. METHODOLOGY  \nLanChain helps us with  the querying process a nd extracting  \ninformation fro m the PDF base d on the prompt sent by the \nuser.For the sake of conv enience, a web application is \ndeveloped that can retrieve accurate information base d on the \nuser’s input alo ne. \n \n \nFig.A. Application  Architechture  \n \nA. Steps followed in the Application Architechture : \nStep I: The  Open AI  Large Language Model s and The Open A I \nEmbeddings a cts as the back -end of our application . \nStep II:  Here we will use Strea mlit, which will he lp us to build \ninteractive and beautiful interface for  our we b application.  \nStep III: Streamlit will also take care of our Front -end part \nwhere we can get the text inputs and messages and also the \nPDF files from the user . \n \nFig.B. Workin g Pro cess \n \nWith the help of Fig. B we can understand how L arge Language \nModel helps the user to get the accurate results.  \nB. Streaml it \nStreamlit is an open -source library that allows us to unique \nweb apps for Machine Learning and Data Science projects fast \nand efficient . Streamlit is an open -source library that allows us \nto unique web apps for Machine Learning and Data Science \nprojects fast and efficient. With this framework, you can easily \nbuild interactive visualization plo ts, models, and dashboards \nwithout h aving  a worry about the underlying web framework \nor deployment infrastructure used in the backend. It also \nprovides the users to add widgets which helps the users the \ninteract with the web app and the models that we used . This \nframework also integrates the  popu lar python and machine \nlearning packages such as NumPy, Pandas, Matplotlib, \n367International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023Seaborn, Scikit -learn and TensorFlow, which enables us to \nquickly build and deploy our trained models . \nFeatures  of Streamlit:  \nUser -friendly:  Streamlit offers an easy -to-use in terface that \nrequires little scripting to build dynamic data apps.  \nRapid prototyping:  Streamlit is made for rapid prototyping, \nallowing developers and data scientists to test out various \nconcepts and create completely funct ional apps.  \nData Cache:  The dat a cac he facilitates and accelerates \ncomputati onal workflows.   \n \nReal-time collaboration is made possible by Streamlit, \nallowing several users to work on the same projec t at once.  \nWidgets that enable for real -time data editing and exploration \ninclude slide rs, d ropdown menus, and checkboxes, among a \nvast variety of interactive widgets that Streamlit offers.  \n \nIII.  RESULTS  AND  DISCUSSION  \nA. Images of Web Application and Output.  \n \nFig.C. Interface of web applicat ion \n \nThis is how the i nterface of our web application w ill look li ke. \nNow the use r can click on br owse file s and can upload a fi le \nfrom their devi ce under 200  Mega  Bytes . After few minutes of \nprocessing , we will get an additional in box where we can give \nin ou r quer y. \n \n \nFig.D. Image of web applicatio n with i nput q uery box.  \n \nSo, now we got our input query box and now we can ask \nquestions on the PDF t hat we have uploaded. Here I have \nuploaded a PDF based on Cyber Crime.  Now you can ask \ndiffer ent question s like “What is Cyber Stalking?”, “What are \nthe recent inci dents  of Cyber Terrorism in Wo rld?” and also  \ndifferentiate between questions.  \n \n \nFig.E. The Output that we got for our 1st Query  \n \n \nFig.F. The Output that we got for our 2nd  Query  \n \nHere we got our output  for our 1st and 2nd query w hich is \n“What is Cyber Stalking?” and “What are the recent incidents \nof Cyber Terrorism in Wo rld?” our Large Language Model \nwent through  file and gave an accurate result on the query \ngiven.  \n \n \nFig.G. The ou tput we got for Differentiate Between Question  \n \nThis output that the appli catio n gave us after the query is quite \ninteresting . When we look into the file there were 3 pages \ndiscussing on Vishing and Phising  but th e application gave us \na clear and con cise diffe rentiation on both Vishing and \nPhishing in just 4 line.  \n \n368International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023IV. CONCLUSION  \nUsing LangChain and Large Language Model  and Streamlit  \nwe have created a web application  that simplifies and \nenhances the process of extracting relevant informat ion from \nPDFs . Users can now retrieve any infor mation in the PDF and \nsave their time and eff ort. The i ntegration of LangChai n \ntechnology adds a layer of efficiency and accuracy to the \nquerying process, making the app a valuable tool for \nindividuals working with PDF documents.  \n \n \n \n \n \n \n \n REFERENCES  \n \n[1] https://streamlit.io/  \n[2] https ://python.langchain.com/  \n[3] https://platform.openai.com/docs/models  \n[4] Meharwade, Anuradha & Patil, G.A.. (2016). E fficient Keyword Search \nover Encrypted Cloud Data. Procedia Computer Science. 78. 139 -145. \n10.1016 /j.procs.2016.02.023. Trans. Roy. Soc. London, vol. A247, pp. \n529-551, April 1955. ( references ) \n[5] Nashipudimath, Madhu & Shinde, Subhash & Jain, Jayshree. (2020). An \nefficient integration and indexing method based on feature patterns and \nsemantic analys is fo r big data. Array. 7. 100033. \n10.1016/j.array.2020.100033. I.S. Jacobs and C.P. Bean, “Fine particles, \nthin films and exchange anisotropy, ” in Magnetism, vol. III, G.T. Rado \nand H. Suhl, Eds. New York: Academic, 1963, pp. 271 -350. \n[6] Zhu, Miao & Cole, Ja cquel ine. (2022). PDFDataExtractor: A Tool for \nReading Scientific Text and Interpreting Metadata from the Typeset \nLiterature in the Portable Document For mat. Journal of Chemical \nInformation and Modeling. 62. 10.1021/acs.jcim.1c01198. R. Nicole, \n“Title of p aper with only first word capitalized, ” J. Name Stand. \nAbbrev., in press.  \n \n369International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023\nView publication stats',), kwargs={}
2025-09-08 14:48:00,723 [ERROR] Error in function 'recursive_text_splitter' after 0.0005 seconds: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
2025-09-08 14:56:41,113 [INFO] Started function 'load_local_data_folder' with args=('./Data',), kwargs={}
2025-09-08 14:56:41,114 [INFO] Started function 'local_data_loading' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:56:41,114 [INFO] Started function 'pdf_reader' with args=('Data\\agentic-ai.pdf',), kwargs={}
2025-09-08 14:56:41,532 [INFO] Finished function 'pdf_reader' in 0.4181 seconds
2025-09-08 14:56:41,532 [INFO] Finished function 'local_data_loading' in 0.4181 seconds
2025-09-08 14:56:41,532 [INFO] Started function 'local_data_loading' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:56:41,532 [INFO] Started function 'pdf_reader' with args=('Data\\chunking_strategies.pdf',), kwargs={}
2025-09-08 14:56:41,717 [INFO] Finished function 'pdf_reader' in 0.1844 seconds
2025-09-08 14:56:41,717 [INFO] Finished function 'local_data_loading' in 0.1844 seconds
2025-09-08 14:56:41,717 [INFO] Started function 'local_data_loading' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:56:41,717 [INFO] Started function 'pdf_reader' with args=('Data\\langchain.pdf',), kwargs={}
2025-09-08 14:56:42,044 [INFO] Finished function 'pdf_reader' in 0.3265 seconds
2025-09-08 14:56:42,044 [INFO] Finished function 'local_data_loading' in 0.3275 seconds
2025-09-08 14:56:42,044 [INFO] Finished function 'load_local_data_folder' in 0.9315 seconds
2025-09-08 14:56:42,079 [INFO] Started function 'local_data_loading' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:56:42,079 [INFO] Started function 'pdf_reader' with args=('./Data/langchain.pdf',), kwargs={}
2025-09-08 14:56:42,202 [INFO] Finished function 'pdf_reader' in 0.1226 seconds
2025-09-08 14:56:42,202 [INFO] Finished function 'local_data_loading' in 0.1226 seconds
2025-09-08 14:56:42,221 [INFO] Started function 'recursive_text_splitter' with args=('See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/372529063\nAn Effective Query System Using LLMs and LangChain\nArticle \xa0\xa0 in\xa0\xa0International Journal of Engineering R esearch and  · July 2023\nCITATIONS\n11READS\n3,834\n2 author s:\nAdith Sr eeram a\nVIT-AP Univ ersity\n2 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nJithendr a Sai P appuri\nGeor ge Mason Univ ersity\n3 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Jithendr a Sai P appuri  on 23 July 2023.\nThe user has r equest ed enhanc ement of the do wnlo aded file.An Ef fective Query System Using LLMs and \nLangChain  \n \nAdith Sreeram A S  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  Pappuri Jithe ndra Sai  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  \n \n \nAbstract—Due to the unstructured nature of the PDF \ndocument format and the requirement for precise and pertinent \nsearch results, querying a PDF can take time and effort. \nLang Chain  overcomes these challenges by utilizing advanced \nnatural language processing algorith ms that analyze the content \nof the PDFs and extract essential information. To improve the \nsearch experience, it uses  effective indexing and retrieval \ntechniques, mov able filters, and a simple search interface.  \nLangChain also allows users to save queries, create bookmarks, \nand annotate important sections, enabling efficient retrieval of \nrelevant information from PDF documents. The features of \nLangChain increase overal l efficiency and makes PDF querying \nmuch easier and  simpler .  \nKeywords —LangChain , Querying PD F, Streamlit.  \nI.  INTRODUCTION   \nThe growth and use of digital products is growing \nexponentially in this world. And the process of searching and \nretrieving information  from  those pdf documents is \nchallenging. Now, we have a t ool that revolutionized Natural \nLanguage Processing and is designed to create applications \nbased on Large Language Models [LLM].  \n \nLangChain is a cutting -edge solutio n which helps us in the \nquerying proce ss and extracting information from PDFs. With \nits advanced NLP algorithms,  it helps users to interact with the \nPDFs and makes the document search and retrieval very easy.  \n \nAfter building our LLM model we will use Streamlit, a web \napplication framewor k whi ch helps us create custom attractive \nweb applications. One advantage of Streamlit is that its use \ndoes not necessitate familiarity with other web development \nframeworks like  HTML and CSS. With Streamlit, you can \ninstantly deploy your models with minim al effort and code.  \nII. METHODOLOGY  \nLanChain helps us with  the querying process a nd extracting  \ninformation fro m the PDF base d on the prompt sent by the \nuser.For the sake of conv enience, a web application is \ndeveloped that can retrieve accurate information base d on the \nuser’s input alo ne. \n \n \nFig.A. Application  Architechture  \n \nA. Steps followed in the Application Architechture : \nStep I: The  Open AI  Large Language Model s and The Open A I \nEmbeddings a cts as the back -end of our application . \nStep II:  Here we will use Strea mlit, which will he lp us to build \ninteractive and beautiful interface for  our we b application.  \nStep III: Streamlit will also take care of our Front -end part \nwhere we can get the text inputs and messages and also the \nPDF files from the user . \n \nFig.B. Workin g Pro cess \n \nWith the help of Fig. B we can understand how L arge Language \nModel helps the user to get the accurate results.  \nB. Streaml it \nStreamlit is an open -source library that allows us to unique \nweb apps for Machine Learning and Data Science projects fast \nand efficient . Streamlit is an open -source library that allows us \nto unique web apps for Machine Learning and Data Science \nprojects fast and efficient. With this framework, you can easily \nbuild interactive visualization plo ts, models, and dashboards \nwithout h aving  a worry about the underlying web framework \nor deployment infrastructure used in the backend. It also \nprovides the users to add widgets which helps the users the \ninteract with the web app and the models that we used . This \nframework also integrates the  popu lar python and machine \nlearning packages such as NumPy, Pandas, Matplotlib, \n367International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023Seaborn, Scikit -learn and TensorFlow, which enables us to \nquickly build and deploy our trained models . \nFeatures  of Streamlit:  \nUser -friendly:  Streamlit offers an easy -to-use in terface that \nrequires little scripting to build dynamic data apps.  \nRapid prototyping:  Streamlit is made for rapid prototyping, \nallowing developers and data scientists to test out various \nconcepts and create completely funct ional apps.  \nData Cache:  The dat a cac he facilitates and accelerates \ncomputati onal workflows.   \n \nReal-time collaboration is made possible by Streamlit, \nallowing several users to work on the same projec t at once.  \nWidgets that enable for real -time data editing and exploration \ninclude slide rs, d ropdown menus, and checkboxes, among a \nvast variety of interactive widgets that Streamlit offers.  \n \nIII.  RESULTS  AND  DISCUSSION  \nA. Images of Web Application and Output.  \n \nFig.C. Interface of web applicat ion \n \nThis is how the i nterface of our web application w ill look li ke. \nNow the use r can click on br owse file s and can upload a fi le \nfrom their devi ce under 200  Mega  Bytes . After few minutes of \nprocessing , we will get an additional in box where we can give \nin ou r quer y. \n \n \nFig.D. Image of web applicatio n with i nput q uery box.  \n \nSo, now we got our input query box and now we can ask \nquestions on the PDF t hat we have uploaded. Here I have \nuploaded a PDF based on Cyber Crime.  Now you can ask \ndiffer ent question s like “What is Cyber Stalking?”, “What are \nthe recent inci dents  of Cyber Terrorism in Wo rld?” and also  \ndifferentiate between questions.  \n \n \nFig.E. The Output that we got for our 1st Query  \n \n \nFig.F. The Output that we got for our 2nd  Query  \n \nHere we got our output  for our 1st and 2nd query w hich is \n“What is Cyber Stalking?” and “What are the recent incidents \nof Cyber Terrorism in Wo rld?” our Large Language Model \nwent through  file and gave an accurate result on the query \ngiven.  \n \n \nFig.G. The ou tput we got for Differentiate Between Question  \n \nThis output that the appli catio n gave us after the query is quite \ninteresting . When we look into the file there were 3 pages \ndiscussing on Vishing and Phising  but th e application gave us \na clear and con cise diffe rentiation on both Vishing and \nPhishing in just 4 line.  \n \n368International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023IV. CONCLUSION  \nUsing LangChain and Large Language Model  and Streamlit  \nwe have created a web application  that simplifies and \nenhances the process of extracting relevant informat ion from \nPDFs . Users can now retrieve any infor mation in the PDF and \nsave their time and eff ort. The i ntegration of LangChai n \ntechnology adds a layer of efficiency and accuracy to the \nquerying process, making the app a valuable tool for \nindividuals working with PDF documents.  \n \n \n \n \n \n \n \n REFERENCES  \n \n[1] https://streamlit.io/  \n[2] https ://python.langchain.com/  \n[3] https://platform.openai.com/docs/models  \n[4] Meharwade, Anuradha & Patil, G.A.. (2016). E fficient Keyword Search \nover Encrypted Cloud Data. Procedia Computer Science. 78. 139 -145. \n10.1016 /j.procs.2016.02.023. Trans. Roy. Soc. London, vol. A247, pp. \n529-551, April 1955. ( references ) \n[5] Nashipudimath, Madhu & Shinde, Subhash & Jain, Jayshree. (2020). An \nefficient integration and indexing method based on feature patterns and \nsemantic analys is fo r big data. Array. 7. 100033. \n10.1016/j.array.2020.100033. I.S. Jacobs and C.P. Bean, “Fine particles, \nthin films and exchange anisotropy, ” in Magnetism, vol. III, G.T. Rado \nand H. Suhl, Eds. New York: Academic, 1963, pp. 271 -350. \n[6] Zhu, Miao & Cole, Ja cquel ine. (2022). PDFDataExtractor: A Tool for \nReading Scientific Text and Interpreting Metadata from the Typeset \nLiterature in the Portable Document For mat. Journal of Chemical \nInformation and Modeling. 62. 10.1021/acs.jcim.1c01198. R. Nicole, \n“Title of p aper with only first word capitalized, ” J. Name Stand. \nAbbrev., in press.  \n \n369International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023\nView publication stats',), kwargs={}
2025-09-08 14:56:42,221 [ERROR] Error in function 'recursive_text_splitter' after 0.0000 seconds: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
Traceback (most recent call last):
  File "i:\IP-taskpipline\project-genai\pgen\src\utils\logger.py", line 27, in wrapper
    result = func(*args, **kwargs)
TypeError: text_chunking.recursive_text_splitter() missing 2 required positional arguments: 'chunk_size' and 'overlap'
2025-09-08 14:58:37,156 [INFO] Started function 'recursive_text_splitter' with args=('See discussions, st ats, and author pr ofiles f or this public ation at : https://www .researchgate.ne t/public ation/372529063\nAn Effective Query System Using LLMs and LangChain\nArticle \xa0\xa0 in\xa0\xa0International Journal of Engineering R esearch and  · July 2023\nCITATIONS\n11READS\n3,834\n2 author s:\nAdith Sr eeram a\nVIT-AP Univ ersity\n2 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nJithendr a Sai P appuri\nGeor ge Mason Univ ersity\n3 PUBLICA TIONS \xa0\xa0\xa011 CITATIONS \xa0\xa0\xa0\nSEE PROFILE\nAll c ontent f ollo wing this p age was uplo aded b y Jithendr a Sai P appuri  on 23 July 2023.\nThe user has r equest ed enhanc ement of the do wnlo aded file.An Ef fective Query System Using LLMs and \nLangChain  \n \nAdith Sreeram A S  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  Pappuri Jithe ndra Sai  \nSchool of Computer Scie nce and Engineering  \nVIT-AP U niversity  \nAmaravati, Andhra Pradesh, India.  \n  \n \n \nAbstract—Due to the unstructured nature of the PDF \ndocument format and the requirement for precise and pertinent \nsearch results, querying a PDF can take time and effort. \nLang Chain  overcomes these challenges by utilizing advanced \nnatural language processing algorith ms that analyze the content \nof the PDFs and extract essential information. To improve the \nsearch experience, it uses  effective indexing and retrieval \ntechniques, mov able filters, and a simple search interface.  \nLangChain also allows users to save queries, create bookmarks, \nand annotate important sections, enabling efficient retrieval of \nrelevant information from PDF documents. The features of \nLangChain increase overal l efficiency and makes PDF querying \nmuch easier and  simpler .  \nKeywords —LangChain , Querying PD F, Streamlit.  \nI.  INTRODUCTION   \nThe growth and use of digital products is growing \nexponentially in this world. And the process of searching and \nretrieving information  from  those pdf documents is \nchallenging. Now, we have a t ool that revolutionized Natural \nLanguage Processing and is designed to create applications \nbased on Large Language Models [LLM].  \n \nLangChain is a cutting -edge solutio n which helps us in the \nquerying proce ss and extracting information from PDFs. With \nits advanced NLP algorithms,  it helps users to interact with the \nPDFs and makes the document search and retrieval very easy.  \n \nAfter building our LLM model we will use Streamlit, a web \napplication framewor k whi ch helps us create custom attractive \nweb applications. One advantage of Streamlit is that its use \ndoes not necessitate familiarity with other web development \nframeworks like  HTML and CSS. With Streamlit, you can \ninstantly deploy your models with minim al effort and code.  \nII. METHODOLOGY  \nLanChain helps us with  the querying process a nd extracting  \ninformation fro m the PDF base d on the prompt sent by the \nuser.For the sake of conv enience, a web application is \ndeveloped that can retrieve accurate information base d on the \nuser’s input alo ne. \n \n \nFig.A. Application  Architechture  \n \nA. Steps followed in the Application Architechture : \nStep I: The  Open AI  Large Language Model s and The Open A I \nEmbeddings a cts as the back -end of our application . \nStep II:  Here we will use Strea mlit, which will he lp us to build \ninteractive and beautiful interface for  our we b application.  \nStep III: Streamlit will also take care of our Front -end part \nwhere we can get the text inputs and messages and also the \nPDF files from the user . \n \nFig.B. Workin g Pro cess \n \nWith the help of Fig. B we can understand how L arge Language \nModel helps the user to get the accurate results.  \nB. Streaml it \nStreamlit is an open -source library that allows us to unique \nweb apps for Machine Learning and Data Science projects fast \nand efficient . Streamlit is an open -source library that allows us \nto unique web apps for Machine Learning and Data Science \nprojects fast and efficient. With this framework, you can easily \nbuild interactive visualization plo ts, models, and dashboards \nwithout h aving  a worry about the underlying web framework \nor deployment infrastructure used in the backend. It also \nprovides the users to add widgets which helps the users the \ninteract with the web app and the models that we used . This \nframework also integrates the  popu lar python and machine \nlearning packages such as NumPy, Pandas, Matplotlib, \n367International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023Seaborn, Scikit -learn and TensorFlow, which enables us to \nquickly build and deploy our trained models . \nFeatures  of Streamlit:  \nUser -friendly:  Streamlit offers an easy -to-use in terface that \nrequires little scripting to build dynamic data apps.  \nRapid prototyping:  Streamlit is made for rapid prototyping, \nallowing developers and data scientists to test out various \nconcepts and create completely funct ional apps.  \nData Cache:  The dat a cac he facilitates and accelerates \ncomputati onal workflows.   \n \nReal-time collaboration is made possible by Streamlit, \nallowing several users to work on the same projec t at once.  \nWidgets that enable for real -time data editing and exploration \ninclude slide rs, d ropdown menus, and checkboxes, among a \nvast variety of interactive widgets that Streamlit offers.  \n \nIII.  RESULTS  AND  DISCUSSION  \nA. Images of Web Application and Output.  \n \nFig.C. Interface of web applicat ion \n \nThis is how the i nterface of our web application w ill look li ke. \nNow the use r can click on br owse file s and can upload a fi le \nfrom their devi ce under 200  Mega  Bytes . After few minutes of \nprocessing , we will get an additional in box where we can give \nin ou r quer y. \n \n \nFig.D. Image of web applicatio n with i nput q uery box.  \n \nSo, now we got our input query box and now we can ask \nquestions on the PDF t hat we have uploaded. Here I have \nuploaded a PDF based on Cyber Crime.  Now you can ask \ndiffer ent question s like “What is Cyber Stalking?”, “What are \nthe recent inci dents  of Cyber Terrorism in Wo rld?” and also  \ndifferentiate between questions.  \n \n \nFig.E. The Output that we got for our 1st Query  \n \n \nFig.F. The Output that we got for our 2nd  Query  \n \nHere we got our output  for our 1st and 2nd query w hich is \n“What is Cyber Stalking?” and “What are the recent incidents \nof Cyber Terrorism in Wo rld?” our Large Language Model \nwent through  file and gave an accurate result on the query \ngiven.  \n \n \nFig.G. The ou tput we got for Differentiate Between Question  \n \nThis output that the appli catio n gave us after the query is quite \ninteresting . When we look into the file there were 3 pages \ndiscussing on Vishing and Phising  but th e application gave us \na clear and con cise diffe rentiation on both Vishing and \nPhishing in just 4 line.  \n \n368International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023IV. CONCLUSION  \nUsing LangChain and Large Language Model  and Streamlit  \nwe have created a web application  that simplifies and \nenhances the process of extracting relevant informat ion from \nPDFs . Users can now retrieve any infor mation in the PDF and \nsave their time and eff ort. The i ntegration of LangChai n \ntechnology adds a layer of efficiency and accuracy to the \nquerying process, making the app a valuable tool for \nindividuals working with PDF documents.  \n \n \n \n \n \n \n \n REFERENCES  \n \n[1] https://streamlit.io/  \n[2] https ://python.langchain.com/  \n[3] https://platform.openai.com/docs/models  \n[4] Meharwade, Anuradha & Patil, G.A.. (2016). E fficient Keyword Search \nover Encrypted Cloud Data. Procedia Computer Science. 78. 139 -145. \n10.1016 /j.procs.2016.02.023. Trans. Roy. Soc. London, vol. A247, pp. \n529-551, April 1955. ( references ) \n[5] Nashipudimath, Madhu & Shinde, Subhash & Jain, Jayshree. (2020). An \nefficient integration and indexing method based on feature patterns and \nsemantic analys is fo r big data. Array. 7. 100033. \n10.1016/j.array.2020.100033. I.S. Jacobs and C.P. Bean, “Fine particles, \nthin films and exchange anisotropy, ” in Magnetism, vol. III, G.T. Rado \nand H. Suhl, Eds. New York: Academic, 1963, pp. 271 -350. \n[6] Zhu, Miao & Cole, Ja cquel ine. (2022). PDFDataExtractor: A Tool for \nReading Scientific Text and Interpreting Metadata from the Typeset \nLiterature in the Portable Document For mat. Journal of Chemical \nInformation and Modeling. 62. 10.1021/acs.jcim.1c01198. R. Nicole, \n“Title of p aper with only first word capitalized, ” J. Name Stand. \nAbbrev., in press.  \n \n369International Journal of Engineering Research & Technology (IJERT)\nISSN: 2278-0181http://www.ijert.org\nIJERTV12IS060161\n(This work is licensed under a Creative Commons Attribution 4.0 International License.)Published by :\nwww.ijert.orgVol. 12 Issue 06, June-2023\nView publication stats', 150, 15), kwargs={}
2025-09-08 14:58:37,157 [INFO] Finished function 'recursive_text_splitter' in 0.0010 seconds
